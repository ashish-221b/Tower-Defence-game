#lang racket
(provide (all-defined-out))
(define (air-path x y)
  (if (< x 405) 1
      0))
(define (path1-1 x y)
  (cond
    ((and (and (>= x 80) (<= x 120)) (and (>= y 0) (< y 85)))
     1)
    ((and (and (>= x 80) (< x 160)) (and (>= y 80) (<= y 91)))
     2)
    ((and (and (>= x 160) (<= x 191)) (and (>= y 80) (< y 305)))
     1)
    ((and (and (> x 60) (<= x 191)) (and (>= y 280) (<= y 320)))
     4)
    ((and (and (>= x 0) (<= x 70)) (and (>= y 280) (< y 402)))
     1)
    (#t 0)))
;;;;;;;;;;;;;;;;
(define (path1-2 x y)
  (cond
    ((and (and (>= x 280) (<= x 320)) (and (>= y 0) (< y 125)))
     1)
    ((and (and (> x 240) (<= x 320)) (and (>= y 120) (<= y 131)))
     4)
    ((and (and (>= x 240) (<= x 271)) (and (>= y 121) (< y 402)))
     1)
    (#t 0)))
;;;;;;;;;;;;;
(define (path1-3 x y)
  (cond
    ((and (and (>= x 280) (<= x 320)) (and (>= y 0) (< y 125)))
     1)
    ((and (and (> x 279) (<= x 325)) (and (>= y 120) (<= y 131)))
     2)
    ((and (and (>= x 325) (<= x 330)) (and (>= y 121) (< y 402)))
     1)
    (#t 0)))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(define (path2-1 x y)
  (cond
    ((and (and (>= x 80) (<= x 120)) (and (>= y 0) (< y 100)))
     1)
    ((and (and (>= x 80) (< x 180)) (and (>= y 80) (<= y 121)))
     2)
    ((and (and (>= x 160) (<= x 191)) (and (>= y 95) (< y 285)))
     1)
    ((and (and (> x 40) (<= x 191)) (and (>= y 280) (<= y 320)))
     4)
    ((and (and (>= x 0) (<= x 70)) (and (>= y 279) (< y 402)))
     1)
    ((>= y 370) 0)
    (#t 0)))
;;;;;;;;;;;;;;;;;
(define (path2-2 x y)
  (cond
    ((and (and (>= x 280) (<= x 320)) (and (>= y 0) (< y 125)))
     1)
    ((and (and (>= x 260) (< x 315)) (and (>= y 120) (<= y 130)))
     4)
    ((and (and (>= x 240) (<= x 300)) (and (>= y 120) (< y 402)))
     1)
    (#t 0)))
;;;;;;;;;;;;;;;;;;
(define (path2-3 x y)
  (cond
    ((and (and (>= x 280) (<= x 320)) (and (>= y 0) (< y 140)))
     1)
    ((and (and (> x 275) (<= x 340)) (and (>= y 130) (<= y 145)))
     2)
    ((and (and (>= x 325) (<= x 345)) (and (>= y 139) (< y 402)))
     1)
    (#t 0)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(define (path3-1 x y)
  (cond
    ((and (and (>= x 80) (<= x 95)) (and (>= y 0) (< y 80)))
     1)
    ((and (and (>= x 80) (< x 161)) (and (>= y 60) (<= y 91)))
     2)
    ((and (and (>= x 150) (<= x 191)) (and (>= y 80) (< y 280)))
     1)
    ((and (and (> x 40) (<= x 191)) (and (>= y 270) (<= y 291)))
     4)
    ((and (and (>= x 0) (<= x 70)) (and (>= y 280) (< y 402)))
     1)
    (#t 0)))
;;;;;;;;;;;;;;;
(define (path3-2 x y)
  (cond
    ((and (and (>= x 280) (<= x 300)) (and (>= y 0) (< y 120)))
     1)
    ((and (and (>= x 245) (< x 300)) (and (>= y 110) (<= y 160)))
     4)
    ((and (and (>= x 240) (<= x 251)) (and (>= y 120) (< y 402)))
     1)
    (#t 0)))
;;;;;;;;;;;;;
(define (path3-3 x y)
  (cond
    ((and (and (>= x 280) (<= x 310)) (and (>= y 0) (< y 120)))
     1)
    ((and (and (> x 280) (<= x 325)) (and (>= y 110) (<= y 160)))
     2)
    ((and (and (>= x 320) (<= x 360)) (and (>= y 120) (< y 402)))
     1)
    (#t 0)))
